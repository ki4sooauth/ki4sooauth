<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gooagoo.dao.generator.open.OpenUserTokenRelMapper" >
  <resultMap id="BaseResultMap" type="com.gooagoo.entity.generator.open.OpenUserTokenRel" >
    <id column="token_id" property="tokenId" jdbcType="CHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="app_key" property="appKey" jdbcType="INTEGER" />
    <result column="expire_time" property="expireTime" jdbcType="TIMESTAMP" />
    <result column="update_dt" property="updateDt" jdbcType="TIMESTAMP" />
  </resultMap>

<!-- 查询where部分sql限制条件集合 -->
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach  collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

<!-- 修改where部分sql限制条件集合 -->
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach  collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

<!-- select部分查询字段集合 -->
  <sql id="Base_Column_List">
      token_id, user_id, app_key, 
      expire_time, update_dt
  </sql>

  <!-- 按对象可分页可去重查询 -->
  <select id="selectByExample" parameterType="com.gooagoo.entity.generator.open.OpenUserTokenRelExample" resultMap="BaseResultMap">
    select
      <if test="distinct">
         distinct
      </if>
      <include refid="Base_Column_List" />
    from open_user_token_rel
    <if test="_parameter != null">
       <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
       order by ${orderByClause}
    </if>
    <if test="limitStart &gt;= 0 and limitEnd &gt;= 0">
       limit ${limitStart} , ${limitEnd}
    </if>
  </select>

  <!-- 按对象查询数据条数 -->
  <select id="countByExample" parameterType="com.gooagoo.entity.generator.open.OpenUserTokenRelExample" resultType="java.lang.Integer">
    select count(*) from open_user_token_rel
    <if test="_parameter != null">
       <include refid="Example_Where_Clause" />
    </if>
  </select>

  <!-- 按主键实体查询表信息 -->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.gooagoo.entity.generator.open.OpenUserTokenRelKey" >
    select 
      token_id, user_id, app_key, 
      expire_time, update_dt
    from open_user_token_rel where token_id = #{tokenId,jdbcType=CHAR}
  </select>

  <!-- 按对象删除数据 -->
  <delete id="deleteByExample" parameterType="com.gooagoo.entity.generator.open.OpenUserTokenRelExample">
    delete from open_user_token_rel
    <if test="_parameter != null">
       <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <!-- 按表主键删除数据 -->
  <delete id="deleteByPrimaryKey" parameterType="com.gooagoo.entity.generator.open.OpenUserTokenRelKey" >
    delete from open_user_token_rel where token_id = #{tokenId,jdbcType=CHAR}
  </delete>

  <!-- 可选择性添加数据 -->
  <insert id="insertSelective" parameterType="com.gooagoo.entity.generator.open.OpenUserTokenRel" >
    insert into open_user_token_rel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test= "tokenId != null">
         token_id,
      </if>
      <if test= "userId != null">
         user_id,
      </if>
      <if test= "appKey != null">
         app_key,
      </if>
      <if test= "expireTime != null">
         expire_time,
      </if>
      <if test= "updateDt != null">
         update_dt
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test= "tokenId != null">
         #{tokenId,jdbcType=CHAR},
      </if>
      <if test= "userId != null">
         #{userId,jdbcType=VARCHAR},
      </if>
      <if test= "appKey != null">
         #{appKey,jdbcType=INTEGER},
      </if>
      <if test= "expireTime != null">
         #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test= "updateDt != null">
         #{updateDt,jdbcType=TIMESTAMP}
      </if>
    </trim>
  </insert>

  <!-- 按对象更新表所有字段信息（create_time,c_time_stamp字段除外） -->
  <update id="updateAllByExample">
    update open_user_token_rel
    <set>
        token_id = #{record.tokenId,jdbcType=CHAR},
        user_id = #{record.userId,jdbcType=VARCHAR},
        app_key = #{record.appKey,jdbcType=INTEGER},
        expire_time = #{record.expireTime,jdbcType=TIMESTAMP},
        update_dt = #{record.updateDt,jdbcType=TIMESTAMP}
    </set>
    <if test="_parameter != null">
       <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <!-- 按对象选择性更新表字段信息（create_time,c_time_stamp字段除外） -->
  <update id="updateByExampleSelective">
    update open_user_token_rel
    <set>
      <if test="record.tokenId !=null">
        token_id = #{record.tokenId,jdbcType=CHAR},
      </if>
      <if test="record.userId !=null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.appKey !=null">
        app_key = #{record.appKey,jdbcType=INTEGER},
      </if>
      <if test="record.expireTime !=null">
        expire_time = #{record.expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDt !=null">
        update_dt = #{record.updateDt,jdbcType=TIMESTAMP}
      </if>
    </set>
    <if test="_parameter != null">
       <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <!-- 按主键更新表中所有字段信息（create_time,c_time_stamp字段除外）-->
  <update id="updateByPrimaryKeySelective" parameterType="com.gooagoo.entity.generator.open.OpenUserTokenRel" >
    update open_user_token_rel
    <set>
      <if test="tokenId !=null">
      token_id = #{tokenId,jdbcType=CHAR},
      </if>
      <if test="userId !=null">
      user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="appKey !=null">
      app_key = #{appKey,jdbcType=INTEGER},
      </if>
      <if test="expireTime !=null">
      expire_time = #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDt !=null">
      update_dt = #{updateDt,jdbcType=TIMESTAMP}
      </if>
    </set>
    where token_id = #{tokenId,jdbcType=CHAR}
  </update>

</mapper>
