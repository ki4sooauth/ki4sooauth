package com.gooagoo.api.generator.core.open;

import java.util.List;

import com.gooagoo.entity.generator.open.OpenUserTokenRel;
import com.gooagoo.entity.generator.open.OpenUserTokenRelExample;

public interface OpenUserTokenRelGeneratorCoreService
{

    /**
     * This method was generated by PengYb
     * 此方法对应数据库表open_user_token_rel用于查询表中对应数据条数
     * @param openUserTokenRelExample 查询条件
     * @return 数据条数
     */
    public Integer countByExample(OpenUserTokenRelExample openUserTokenRelExample) ;

    /**
     * This method was generated by PengYb
     * 此方法对应数据库表open_user_token_rel用于查询数据，其中 create_time自动设置为当前数据库时间
     * @param openUserTokenRelExample 查询条件
     * @return 
     */
    public List<OpenUserTokenRel> selectByExample(OpenUserTokenRelExample openUserTokenRelExample) ;

    /**
     * This method was generated by PengYb
     * 此方法对应数据库表open_user_token_rel用于查询数据
     * @param primaryKey 查询条件，主键
     * @return 
     */
    public OpenUserTokenRel selectByPrimaryKey(String primaryKey) ;

    /**
     * This method was generated by PengYb
     * 此方法对应数据库表open_user_token_rel用于删除操作（本系统数据库删除操作非物理删除，请慎用）
     * @param openUserTokenRelExample 删除条件
     * @return true-物理删除数据成功 false-物理删除数据失败
     */
    public boolean physicalDeleteByExample(OpenUserTokenRelExample openUserTokenRelExample) ;

    /**
     * This method was generated by PengYb
     * 此方法对应数据库表open_user_token_rel用于删除操作（本系统数据库删除操作非物理删除，请慎用）
     * @param primaryKey 删除条件
     * @return true-物理删除数据成功 false-物理删除数据失败
     */
    public boolean physicalDeleteByPrimaryKey(String primaryKey) ;

    /**
     * This method was generated by PengYb
     * 此方法对应数据库表open_user_token_rel用于往表中添加数据
     * @param openUserTokenRel 插入数据
     * @return true-添加数据成功 false-添加数据失败
     */
    public boolean insertSelective(OpenUserTokenRel openUserTokenRel) ;

    /**
     * This method was generated by PengYb
     * 此方法对应数据库表open_user_token_rel用于更新数据，其中 create_time不提供修改功能， c_time_stamp自动设置为当前数据库时间
     * @param openUserTokenRel 更新数据
     * @param openUserTokenRelExample 更新条件
     * @return true-更新数据成功 false-更新数据失败
     */
    public boolean updateByExampleSelective(OpenUserTokenRel openUserTokenRel,OpenUserTokenRelExample openUserTokenRelExample) ;

    /**
     * This method was generated by PengYb
     * 此方法对应数据库表open_user_token_rel用于更新数据，其中 create_time不提供修改功能， c_time_stamp自动设置为当前数据库时间
     * @param openUserTokenRel 更新条件
     * @return true-更新数据成功 false-更新数据失败
     */
    public boolean updateByPrimaryKeySelective(OpenUserTokenRel openUserTokenRel) ;

}
