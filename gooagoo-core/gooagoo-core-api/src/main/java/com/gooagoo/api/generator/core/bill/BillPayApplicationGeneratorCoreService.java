package com.gooagoo.api.generator.core.bill;

import java.util.List;

import com.gooagoo.entity.generator.bill.BillPayApplication;
import com.gooagoo.entity.generator.bill.BillPayApplicationExample;

public interface BillPayApplicationGeneratorCoreService
{

    /**
     * This method was generated by PengYb
     * 此方法对应数据库表bill_pay_application用于查询表中对应数据条数
     * @param billPayApplicationExample 查询条件
     * @return 数据条数
     */
    public Integer countByExample(BillPayApplicationExample billPayApplicationExample) ;

    /**
     * This method was generated by PengYb
     * 此方法对应数据库表bill_pay_application用于查询数据，其中 create_time自动设置为当前数据库时间
     * @param billPayApplicationExample 查询条件
     * @return 
     */
    public List<BillPayApplication> selectByExample(BillPayApplicationExample billPayApplicationExample) ;

    /**
     * This method was generated by PengYb
     * 此方法对应数据库表bill_pay_application用于查询数据
     * @param billPayApplicationKey 查询条件，is_del默认为N,如果不想使用此条件请设置为null
     * @return 
     */
    public BillPayApplication selectUnDelByPrimaryKey(String primaryKey) ;

    /**
     * This method was generated by PengYb
     * 此方法对应数据库表bill_pay_application用于查询数据
     * @param primaryKey 查询条件，主键
     * @return 
     */
    public BillPayApplication selectByPrimaryKey(String primaryKey) ;

    /**
     * This method was generated by PengYb
     * 此方法对应数据库表bill_pay_application用于删除操作（本系统数据库删除操作非物理删除，请慎用）
     * @param billPayApplicationExample 删除条件
     * @return true-物理删除数据成功 false-物理删除数据失败
     */
    public boolean physicalDeleteByExample(BillPayApplicationExample billPayApplicationExample) ;

    /**
     * This method was generated by PengYb
     * 此方法对应数据库表bill_pay_application用于删除操作（本系统数据库删除操作非物理删除，请慎用）
     * @param primaryKey 删除条件
     * @return true-物理删除数据成功 false-物理删除数据失败
     */
    public boolean physicalDeleteByPrimaryKey(String primaryKey) ;

    /**
     * This method was generated by PengYb
     * 此方法对应数据库表bill_pay_application用于逻辑删除数据（修改is_del值为Y)
     * @param billPayApplicationExample 删除条件
     * @return true-逻辑删除数据成功 false-逻辑删除数据失败
     */
    public boolean deleteByExample(BillPayApplicationExample billPayApplicationExample) ;

    /**
     * This method was generated by PengYb
     * 此方法对应数据库表bill_pay_application用于逻辑删除数据（修改is_del值为Y)
     * @param primaryKey 删除条件 主键
     * @return true-逻辑删除成功 false-逻辑删除失败
     */
    public boolean deleteByPrimaryKey(String primaryKey) ;

    /**
     * This method was generated by PengYb
     * 此方法对应数据库表bill_pay_application用于往表中添加数据
     * @param billPayApplication 插入数据
     * @return true-添加数据成功 false-添加数据失败
     */
    public boolean insertSelective(BillPayApplication billPayApplication) ;

    /**
     * This method was generated by PengYb
     * 此方法对应数据库表bill_pay_application用于更新数据，其中 create_time不提供修改功能， c_time_stamp自动设置为当前数据库时间
     * @param billPayApplication 更新数据
     * @param billPayApplicationExample 更新条件
     * @return true-更新数据成功 false-更新数据失败
     */
    public boolean updateByExampleSelective(BillPayApplication billPayApplication,BillPayApplicationExample billPayApplicationExample) ;

    /**
     * This method was generated by PengYb
     * 此方法对应数据库表bill_pay_application用于更新数据，其中 create_time不提供修改功能， c_time_stamp自动设置为当前数据库时间
     * @param billPayApplication 更新条件
     * @return true-更新数据成功 false-更新数据失败
     */
    public boolean updateByPrimaryKeySelective(BillPayApplication billPayApplication) ;

}
