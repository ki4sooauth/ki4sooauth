<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gooagoo.dao.generator.sys.TradeAreaMapper" >
  <resultMap id="BaseResultMap" type="com.gooagoo.entity.generator.sys.TradeArea" >
    <id column="trade_area_id" property="tradeAreaId" jdbcType="CHAR" />
    <result column="platform_id" property="platformId" jdbcType="CHAR" />
    <result column="trade_area_name" property="tradeAreaName" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="is_del" property="isDel" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="c_time_stamp" property="cTimeStamp" jdbcType="TIMESTAMP" />
  </resultMap>

<!-- 查询where部分sql限制条件集合 -->
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach  collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

<!-- 修改where部分sql限制条件集合 -->
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach  collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

<!-- select部分查询字段集合 -->
  <sql id="Base_Column_List">
      trade_area_id, platform_id, trade_area_name, 
      description, note, is_del, 
      create_time, c_time_stamp
  </sql>

  <!-- 按对象可分页可去重查询 -->
  <select id="selectByExample" parameterType="com.gooagoo.entity.generator.sys.TradeAreaExample" resultMap="BaseResultMap">
    select
      <if test="distinct">
         distinct
      </if>
      <include refid="Base_Column_List" />
    from trade_area
    <if test="_parameter != null">
       <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
       order by ${orderByClause}
    </if>
    <if test="limitStart &gt;= 0 and limitEnd &gt;= 0">
       limit ${limitStart} , ${limitEnd}
    </if>
  </select>

  <!-- 按对象查询数据条数 -->
  <select id="countByExample" parameterType="com.gooagoo.entity.generator.sys.TradeAreaExample" resultType="java.lang.Integer">
    select count(*) from trade_area
    <if test="_parameter != null">
       <include refid="Example_Where_Clause" />
    </if>
  </select>

  <!-- 按主键实体查询表信息 -->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.gooagoo.entity.generator.sys.TradeAreaKey" >
    select 
      trade_area_id, platform_id, trade_area_name, 
      description, note, is_del, 
      create_time, c_time_stamp
    from trade_area where trade_area_id = #{tradeAreaId,jdbcType=CHAR}
      <if test= "isDel != null">
         and is_del=#{isDel}
      </if>
  </select>

  <!-- 按对象删除数据 -->
  <delete id="deleteByExample" parameterType="com.gooagoo.entity.generator.sys.TradeAreaExample">
    delete from trade_area
    <if test="_parameter != null">
       <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <!-- 按表主键删除数据 -->
  <delete id="deleteByPrimaryKey" parameterType="com.gooagoo.entity.generator.sys.TradeAreaKey" >
    delete from trade_area where trade_area_id = #{tradeAreaId,jdbcType=CHAR}
    <if test= "isDel != null">
        and is_del=#{isDel}
    </if>
  </delete>

  <!-- 可选择性添加数据 -->
  <insert id="insertSelective" parameterType="com.gooagoo.entity.generator.sys.TradeArea" >
    insert into trade_area
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test= "tradeAreaId != null">
         trade_area_id,
      </if>
      <if test= "platformId != null">
         platform_id,
      </if>
      <if test= "tradeAreaName != null">
         trade_area_name,
      </if>
      <if test= "description != null">
         description,
      </if>
      <if test= "note != null">
         note,
      </if>
      <if test= "isDel != null">
         is_del,
      </if>
      <if test= "createTime != null">
         create_time,
      </if>
      <if test= "cTimeStamp != null">
         c_time_stamp
      </if>
      <if test= "createTime == null">
         create_time,
      </if>
      <if test= "cTimeStamp == null">
         c_time_stamp
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test= "tradeAreaId != null">
         #{tradeAreaId,jdbcType=CHAR},
      </if>
      <if test= "platformId != null">
         #{platformId,jdbcType=CHAR},
      </if>
      <if test= "tradeAreaName != null">
         #{tradeAreaName,jdbcType=VARCHAR},
      </if>
      <if test= "description != null">
         #{description,jdbcType=VARCHAR},
      </if>
      <if test= "note != null">
         #{note,jdbcType=VARCHAR},
      </if>
      <if test= "isDel != null">
         #{isDel,jdbcType=CHAR},
      </if>
      <if test= "createTime != null">
         #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test= "cTimeStamp != null">
         #{cTimeStamp,jdbcType=TIMESTAMP}
      </if>
      <if test= "createTime == null">
         CURRENT_TIMESTAMP(),
      </if>
      <if test= "cTimeStamp == null">
         CURRENT_TIMESTAMP()
      </if>
    </trim>
  </insert>

  <!-- 按对象更新表所有字段信息（create_time,c_time_stamp字段除外） -->
  <update id="updateAllByExample">
    update trade_area
    <set>
        trade_area_id = #{record.tradeAreaId,jdbcType=CHAR},
        platform_id = #{record.platformId,jdbcType=CHAR},
        trade_area_name = #{record.tradeAreaName,jdbcType=VARCHAR},
        description = #{record.description,jdbcType=VARCHAR},
        note = #{record.note,jdbcType=VARCHAR},
        is_del = #{record.isDel,jdbcType=CHAR}
    </set>
    <if test="_parameter != null">
       <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <!-- 按对象选择性更新表字段信息（create_time,c_time_stamp字段除外） -->
  <update id="updateByExampleSelective">
    update trade_area
    <set>
      <if test="record.tradeAreaId !=null">
        trade_area_id = #{record.tradeAreaId,jdbcType=CHAR},
      </if>
      <if test="record.platformId !=null">
        platform_id = #{record.platformId,jdbcType=CHAR},
      </if>
      <if test="record.tradeAreaName !=null">
        trade_area_name = #{record.tradeAreaName,jdbcType=VARCHAR},
      </if>
      <if test="record.description !=null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.note !=null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel !=null">
        is_del = #{record.isDel,jdbcType=CHAR},
      </if>
      <if test="record.createTime !=null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cTimeStamp !=null">
        c_time_stamp = #{record.cTimeStamp,jdbcType=TIMESTAMP}
      </if>
    </set>
    <if test="_parameter != null">
       <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <!-- 按主键更新表中所有字段信息（create_time,c_time_stamp字段除外）-->
  <update id="updateByPrimaryKeySelective" parameterType="com.gooagoo.entity.generator.sys.TradeArea" >
    update trade_area
    <set>
      <if test="tradeAreaId !=null">
      trade_area_id = #{tradeAreaId,jdbcType=CHAR},
      </if>
      <if test="platformId !=null">
      platform_id = #{platformId,jdbcType=CHAR},
      </if>
      <if test="tradeAreaName !=null">
      trade_area_name = #{tradeAreaName,jdbcType=VARCHAR},
      </if>
      <if test="description !=null">
      description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="note !=null">
      note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="isDel !=null">
      is_del = #{isDel,jdbcType=CHAR},
      </if>
      <if test="createTime !=null">
      create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cTimeStamp !=null">
      c_time_stamp = #{cTimeStamp,jdbcType=TIMESTAMP}
      </if>
    </set>
    where trade_area_id = #{tradeAreaId,jdbcType=CHAR}
  </update>

</mapper>
