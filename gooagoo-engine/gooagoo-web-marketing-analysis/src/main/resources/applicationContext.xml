<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.0.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
      http://www.springframework.org/schema/tx 
      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<bean id="SpringBeanUtils" class="com.gooagoo.common.utils.SpringBeanUtils"></bean>

	<!-- 版本监控 -项目代号,版本号-->
	<bean class="com.gooagoo.common.monitor.MonitorService">
		<constructor-arg value="analysis"></constructor-arg>
		<constructor-arg value="1.0.1"></constructor-arg>
	</bean>

	<context:component-scan base-package="com.gooagoo">
		<context:include-filter type="annotation"
			expression="org.aspectj.lang.annotation.Aspect" />
	</context:component-scan>

	<!-- 启动@AspectJ支持 -->
	<aop:aspectj-autoproxy />
	<context:property-placeholder location="classpath:activeMq.properties" />

	<!-- 营销引擎MQ -->
	<!-- 配置connectionFactory -->
	<bean id="marketingFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
		destroy-method="stop">
		<property name="connectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL" value="${mar_url}" /><!-- mq地址 -->
				<property name="userName" value="${mar_user}" /><!-- 用户名 -->
				<property name="password" value="${mar_pwd}" /><!-- 密码 -->
				<property name="useAsyncSend" value="true" />
			</bean>
		</property>
		<property name="maxConnections" value="100"></property>
	</bean>
	<!-- 消息监听(此处修改destinationName) -->
	<bean id="objectListenerContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="concurrentConsumers" value="${mar_consumes}" />
		<property name="connectionFactory" ref="marketingFactory" />
		<property name="destinationName" value="${mar_queue}" />
		<property name="messageListener" ref="marketingMatchListener" />
		<property name="pubSubNoLocal" value="false"></property>
	</bean>
	<!-- 消息侦听器（配置自己的侦听器） -->
	<bean id="marketingMatchListener"
		class="com.gooagoo.analysis.receptor.queue.AnalysisQueueListener"></bean>

	<!-- 消息转换器 -->
	<bean id="mqConvert" class="com.gooagoo.common.jms.MQConvert"></bean>

	<!-- 手机推送处理 -->
	<bean id="mobilePushFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
		destroy-method="stop">
		<property name="connectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL" value="${mpq_url}" /><!-- mq地址 -->
				<property name="userName" value="${mpq_user}" /><!-- 用户名 -->
				<property name="password" value="${mpq_pwd}" /><!-- 密码 -->
				<property name="useAsyncSend" value="true" />
			</bean>
		</property>
		<property name="maxConnections" value="100"></property>
	</bean>
	<!-- 配置自己的模板 -->
	<bean id="mobilePushTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory">
			<ref local="mobilePushFactory" />
		</property>
		<!-- 区别它采用的模式为false是p2p，为true是订阅 -->
		<property name="pubSubDomain" value="false" />
		<property name="messageConverter" ref="mqConvert"></property>
	</bean>
	<!-- 发送消息的目的地（推送） -->
	<bean id="mobilePushDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg index="0" value="${mpq_queue}" />
	</bean>

	<!-- 短信处理 -->
	<bean id="messageFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
		destroy-method="stop">
		<property name="connectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL" value="${mes_url}" /><!-- mq地址 -->
				<property name="userName" value="${mes_user}" /><!-- 用户名 -->
				<property name="password" value="${mes_pwd}" /><!-- 密码 -->
				<property name="useAsyncSend" value="true" />
			</bean>
		</property>
		<property name="maxConnections" value="100"></property>
	</bean>
	<!-- 配置自己的模板 -->
	<bean id="messageTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory">
			<ref local="messageFactory" />
		</property>
		<!-- 区别它采用的模式为false是p2p，为true是订阅 -->
		<property name="pubSubDomain" value="false" />
		<property name="messageConverter" ref="mqConvert"></property>
	</bean>
	<!-- 发送消息的目的地（推送） -->
	<bean id="messageDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg index="0" value="${mes_queue}" />
	</bean>

	<!-- 邮件处理 -->
	<bean id="emailFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
		destroy-method="stop">
		<property name="connectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL" value="${ema_url}" /><!-- mq地址 -->
				<property name="userName" value="${ema_user}" /><!-- 用户名 -->
				<property name="password" value="${ema_pwd}" /><!-- 密码 -->
				<property name="useAsyncSend" value="true" />
			</bean>
		</property>
		<property name="maxConnections" value="100"></property>
	</bean>
	<!-- 配置自己的模板 -->
	<bean id="emailTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory">
			<ref local="emailFactory" />
		</property>
		<!-- 区别它采用的模式为false是p2p，为true是订阅 -->
		<property name="pubSubDomain" value="false" />
		<property name="messageConverter" ref="mqConvert"></property>
	</bean>
	<!-- 发送消息的目的地（推送） -->
	<bean id="emailDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg index="0" value="${ema_queue}" />
	</bean>

	<!-- 消息路由日志处理 -->
	<bean id="messageLogFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
		destroy-method="stop">
		<property name="connectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL" value="${mlo_url}" /><!-- mq地址 -->
				<property name="userName" value="${mlo_user}" /><!-- 用户名 -->
				<property name="password" value="${mlo_pwd}" /><!-- 密码 -->
				<property name="useAsyncSend" value="true" />
			</bean>
		</property>
		<property name="maxConnections" value="100"></property>
	</bean>
	<bean id="messageLogTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory">
			<ref local="messageLogFactory" />
		</property>
		<property name="pubSubDomain" value="false" />
		<property name="messageConverter" ref="mqConvert"></property>
	</bean>
	<bean id="messageLogDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<!-- Set the Queue Name -->
		<constructor-arg index="0" value="${mlo_queue}" />
	</bean>
</beans>