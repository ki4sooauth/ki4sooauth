<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gooagoo.dao.generator.behave.FavoriteInfoMapper" >
  <resultMap id="BaseResultMap" type="com.gooagoo.entity.generator.behave.FavoriteInfo" >
    <id column="favorite_id" property="favoriteId" jdbcType="CHAR" />
    <result column="user_id" property="userId" jdbcType="CHAR" />
    <result column="shop_id" property="shopId" jdbcType="CHAR" />
    <result column="info_title" property="infoTitle" jdbcType="CHAR" />
    <result column="info_type" property="infoType" jdbcType="CHAR" />
    <result column="info_url" property="infoUrl" jdbcType="CHAR" />
    <result column="object_id" property="objectId" jdbcType="CHAR" />
    <result column="source" property="source" jdbcType="CHAR" />
    <result column="coupon_status" property="couponStatus" jdbcType="CHAR" />
    <result column="use_time" property="useTime" jdbcType="TIMESTAMP" />
    <result column="is_del" property="isDel" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="c_time_stamp" property="cTimeStamp" jdbcType="TIMESTAMP" />
  </resultMap>

<!-- 查询where部分sql限制条件集合 -->
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach  collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

<!-- 修改where部分sql限制条件集合 -->
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach  collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

<!-- select部分查询字段集合 -->
  <sql id="Base_Column_List">
      favorite_id, user_id, shop_id, 
      info_title, info_type, info_url, 
      object_id, source, coupon_status, 
      use_time, is_del, create_time, 
      c_time_stamp
  </sql>

  <!-- 按对象可分页可去重查询 -->
  <select id="selectByExample" parameterType="com.gooagoo.entity.generator.behave.FavoriteInfoExample" resultMap="BaseResultMap">
    select
      <if test="distinct">
         distinct
      </if>
      <include refid="Base_Column_List" />
    from favorite_info
    <if test="_parameter != null">
       <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
       order by ${orderByClause}
    </if>
    <if test="limitStart &gt;= 0 and limitEnd &gt;= 0">
       limit ${limitStart} , ${limitEnd}
    </if>
  </select>

  <!-- 按对象查询数据条数 -->
  <select id="countByExample" parameterType="com.gooagoo.entity.generator.behave.FavoriteInfoExample" resultType="java.lang.Integer">
    select count(*) from favorite_info
    <if test="_parameter != null">
       <include refid="Example_Where_Clause" />
    </if>
  </select>

  <!-- 按主键实体查询表信息 -->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.gooagoo.entity.generator.behave.FavoriteInfoKey" >
    select 
      favorite_id, user_id, shop_id, 
      info_title, info_type, info_url, 
      object_id, source, coupon_status, 
      use_time, is_del, create_time, 
      c_time_stamp
    from favorite_info where favorite_id = #{favoriteId,jdbcType=CHAR}
      <if test= "isDel != null">
         and is_del=#{isDel}
      </if>
  </select>

  <!-- 按对象删除数据 -->
  <delete id="deleteByExample" parameterType="com.gooagoo.entity.generator.behave.FavoriteInfoExample">
    delete from favorite_info
    <if test="_parameter != null">
       <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <!-- 按表主键删除数据 -->
  <delete id="deleteByPrimaryKey" parameterType="com.gooagoo.entity.generator.behave.FavoriteInfoKey" >
    delete from favorite_info where favorite_id = #{favoriteId,jdbcType=CHAR}
    <if test= "isDel != null">
        and is_del=#{isDel}
    </if>
  </delete>

  <!-- 可选择性添加数据 -->
  <insert id="insertSelective" parameterType="com.gooagoo.entity.generator.behave.FavoriteInfo" >
    insert into favorite_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test= "favoriteId != null">
         favorite_id,
      </if>
      <if test= "userId != null">
         user_id,
      </if>
      <if test= "shopId != null">
         shop_id,
      </if>
      <if test= "infoTitle != null">
         info_title,
      </if>
      <if test= "infoType != null">
         info_type,
      </if>
      <if test= "infoUrl != null">
         info_url,
      </if>
      <if test= "objectId != null">
         object_id,
      </if>
      <if test= "source != null">
         source,
      </if>
      <if test= "couponStatus != null">
         coupon_status,
      </if>
      <if test= "useTime != null">
         use_time,
      </if>
      <if test= "isDel != null">
         is_del,
      </if>
      <if test= "createTime != null">
         create_time,
      </if>
      <if test= "cTimeStamp != null">
         c_time_stamp,
      </if>
      <if test= "createTime == null">
         create_time,
      </if>
      <if test= "cTimeStamp == null">
         c_time_stamp,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test= "favoriteId != null">
         #{favoriteId,jdbcType=CHAR},
      </if>
      <if test= "userId != null">
         #{userId,jdbcType=CHAR},
      </if>
      <if test= "shopId != null">
         #{shopId,jdbcType=CHAR},
      </if>
      <if test= "infoTitle != null">
         #{infoTitle,jdbcType=CHAR},
      </if>
      <if test= "infoType != null">
         #{infoType,jdbcType=CHAR},
      </if>
      <if test= "infoUrl != null">
         #{infoUrl,jdbcType=CHAR},
      </if>
      <if test= "objectId != null">
         #{objectId,jdbcType=CHAR},
      </if>
      <if test= "source != null">
         #{source,jdbcType=CHAR},
      </if>
      <if test= "couponStatus != null">
         #{couponStatus,jdbcType=CHAR},
      </if>
      <if test= "useTime != null">
         #{useTime,jdbcType=TIMESTAMP},
      </if>
      <if test= "isDel != null">
         #{isDel,jdbcType=CHAR},
      </if>
      <if test= "createTime != null">
         #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test= "cTimeStamp != null">
         #{cTimeStamp,jdbcType=TIMESTAMP},
      </if>
      <if test= "createTime == null">
         CURRENT_TIMESTAMP(),
      </if>
      <if test= "cTimeStamp == null">
         CURRENT_TIMESTAMP(),
      </if>
    </trim>
  </insert>

  <!-- 按对象更新表所有字段信息（create_time,c_time_stamp字段除外） -->
  <update id="updateAllByExample">
    update favorite_info
    <set>
        favorite_id = #{record.favoriteId,jdbcType=CHAR},
        user_id = #{record.userId,jdbcType=CHAR},
        shop_id = #{record.shopId,jdbcType=CHAR},
        info_title = #{record.infoTitle,jdbcType=CHAR},
        info_type = #{record.infoType,jdbcType=CHAR},
        info_url = #{record.infoUrl,jdbcType=CHAR},
        object_id = #{record.objectId,jdbcType=CHAR},
        source = #{record.source,jdbcType=CHAR},
        coupon_status = #{record.couponStatus,jdbcType=CHAR},
        use_time = #{record.useTime,jdbcType=TIMESTAMP},
        is_del = #{record.isDel,jdbcType=CHAR}
    </set>
    <if test="_parameter != null">
       <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <!-- 按对象选择性更新表字段信息（create_time,c_time_stamp字段除外） -->
  <update id="updateByExampleSelective">
    update favorite_info
    <set>
      <if test="record.favoriteId !=null">
        favorite_id = #{record.favoriteId,jdbcType=CHAR},
      </if>
      <if test="record.userId !=null">
        user_id = #{record.userId,jdbcType=CHAR},
      </if>
      <if test="record.shopId !=null">
        shop_id = #{record.shopId,jdbcType=CHAR},
      </if>
      <if test="record.infoTitle !=null">
        info_title = #{record.infoTitle,jdbcType=CHAR},
      </if>
      <if test="record.infoType !=null">
        info_type = #{record.infoType,jdbcType=CHAR},
      </if>
      <if test="record.infoUrl !=null">
        info_url = #{record.infoUrl,jdbcType=CHAR},
      </if>
      <if test="record.objectId !=null">
        object_id = #{record.objectId,jdbcType=CHAR},
      </if>
      <if test="record.source !=null">
        source = #{record.source,jdbcType=CHAR},
      </if>
      <if test="record.couponStatus !=null">
        coupon_status = #{record.couponStatus,jdbcType=CHAR},
      </if>
      <if test="record.useTime !=null">
        use_time = #{record.useTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDel !=null">
        is_del = #{record.isDel,jdbcType=CHAR},
      </if>
      <if test="record.createTime !=null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cTimeStamp !=null">
        c_time_stamp = #{record.cTimeStamp,jdbcType=TIMESTAMP}
      </if>
    </set>
    <if test="_parameter != null">
       <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <!-- 按主键更新表中所有字段信息（create_time,c_time_stamp字段除外）-->
  <update id="updateByPrimaryKeySelective" parameterType="com.gooagoo.entity.generator.behave.FavoriteInfo" >
    update favorite_info
    <set>
      <if test="favoriteId !=null">
      favorite_id = #{favoriteId,jdbcType=CHAR},
      </if>
      <if test="userId !=null">
      user_id = #{userId,jdbcType=CHAR},
      </if>
      <if test="shopId !=null">
      shop_id = #{shopId,jdbcType=CHAR},
      </if>
      <if test="infoTitle !=null">
      info_title = #{infoTitle,jdbcType=CHAR},
      </if>
      <if test="infoType !=null">
      info_type = #{infoType,jdbcType=CHAR},
      </if>
      <if test="infoUrl !=null">
      info_url = #{infoUrl,jdbcType=CHAR},
      </if>
      <if test="objectId !=null">
      object_id = #{objectId,jdbcType=CHAR},
      </if>
      <if test="source !=null">
      source = #{source,jdbcType=CHAR},
      </if>
      <if test="couponStatus !=null">
      coupon_status = #{couponStatus,jdbcType=CHAR},
      </if>
      <if test="useTime !=null">
      use_time = #{useTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel !=null">
      is_del = #{isDel,jdbcType=CHAR},
      </if>
      <if test="createTime !=null">
      create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cTimeStamp !=null">
      c_time_stamp = #{cTimeStamp,jdbcType=TIMESTAMP}
      </if>
    </set>
    where favorite_id = #{favoriteId,jdbcType=CHAR}
  </update>

</mapper>
